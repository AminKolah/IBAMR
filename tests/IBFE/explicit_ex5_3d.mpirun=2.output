
IBFEMethod: mesh part 0 is using SECOND order LAGRANGE finite elements.

IBHierarchyIntegrator::initializePatchHierarchy(): tag_buffer = 1 3
INSStaggeredHierarchyIntegrator::initializeCompositeHierarchyData():
  projecting the interpolated velocity field
INSStaggeredHierarchyIntegrator::regridProjection(): regrid projection solve residual norm        = 0

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 0
Simulation time is 0
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0,0.000625], dt = 0.000625
IBHierarchyIntegrator::advanceHierarchy(): regridding prior to timestep 0
IBHierarchyIntegrator::regridHierarchy(): starting Lagrangian data movement
IBHierarchyIntegrator::regridHierarchy(): regridding the patch hierarchy
IBHierarchyIntegrator::regridHierarchy(): finishing Lagrangian data movement
INSStaggeredHierarchyIntegrator::preprocessIntegrateHierarchy(): initializing convective operator
INSStaggeredHierarchyIntegrator::preprocessIntegrateHierarchy(): initializing velocity subdomain solver
INSStaggeredHierarchyIntegrator::preprocessIntegrateHierarchy(): initializing pressure subdomain solver
INSStaggeredHierarchyIntegrator::preprocessIntegrateHierarchy(): initializing incompressible Stokes solver
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 8.018602093e-13
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 8.056107732e-14
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 3.409024766e-08
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 3.409024766e-08
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 0
Simulation time is 0.000625
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.000625 0.006509624143
0.000625 0.009752798447

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 1
Simulation time is 0.000625
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.000625,0.00125], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 5.292824485e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 8.072697501e-08
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 1.148172227e-07
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 1
Simulation time is 0.00125
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.00125 0.01576884185
0.00125 0.009403642787

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 2
Simulation time is 0.00125
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.00125,0.001875], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 4.294096976e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 1.330900151e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 2.479072378e-07
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 2
Simulation time is 0.001875
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.001875 0.01571292518
0.001875 0.009411718999

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 3
Simulation time is 0.001875
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.001875,0.0025], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 9.49231606e-14
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 1.8072404e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 4.286312778e-07
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 3
Simulation time is 0.0025
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.0025 0.01324298273
0.0025 0.009511429067

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 4
Simulation time is 0.0025
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.0025,0.003125], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.031597332e-12
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 2.296948356e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 6.583261134e-07
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 4
Simulation time is 0.003125
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.003125 0.01820916666
0.003125 0.009327821076

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 5
Simulation time is 0.003125
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.003125,0.00375], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 4.278831493e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 2.875691052e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 9.458952185e-07
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 5
Simulation time is 0.00375
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.00375 0.02245755629
0.00375 0.00917336556

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 6
Simulation time is 0.00375
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.00375,0.004375], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.414384869e-12
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 3.446428172e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 1.290538036e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 6
Simulation time is 0.004375
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.004375 0.01499720529
0.004375 0.009465139168

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 7
Simulation time is 0.004375
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.004375,0.005], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.870757792e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 3.888528534e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 1.679390889e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 7
Simulation time is 0.005
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.005 0.004387321952
0.005 0.009873649858

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 8
Simulation time is 0.005
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.005,0.005625], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 5.48229277e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 4.264655485e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 2.105856438e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 8
Simulation time is 0.005625
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.005625 0.004856153671
0.005625 0.009857431019

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 9
Simulation time is 0.005625
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.005625,0.00625], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 4.411196004e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 4.712357346e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 2.577092172e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 9
Simulation time is 0.00625
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.00625 0.01171214474
0.00625 0.009598881075

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 10
Simulation time is 0.00625
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.00625,0.006875], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 9.738524065e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 5.221967976e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 3.09928897e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 10
Simulation time is 0.006875
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.006875 0.01206175088
0.006875 0.009590002509

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 11
Simulation time is 0.006875
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.006875,0.0075], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.499774182e-12
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 5.692382704e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 3.66852724e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 11
Simulation time is 0.0075
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.0075 0.009537527111
0.0075 0.009690326671

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 12
Simulation time is 0.0075
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.0075,0.008125], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.269014912e-12
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 6.171090066e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 4.285636247e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 12
Simulation time is 0.008125
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.008125 0.01561129935
0.008125 0.009463176889

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 13
Simulation time is 0.008125
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.008125,0.00875], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 4.171826769e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 6.769960717e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 4.962632318e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 13
Simulation time is 0.00875
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.00875 0.02489461183
0.00875 0.009116518749

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 14
Simulation time is 0.00875
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.00875,0.009375], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 4.974974465e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 7.427971037e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 5.705429422e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 14
Simulation time is 0.009375
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.009375 0.02294076522
0.009375 0.009200126992

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 15
Simulation time is 0.009375
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.009375,0.01], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.421533253e-12
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 7.995920452e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 6.505021467e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 15
Simulation time is 0.01
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.01 0.01264369225
0.01 0.009599735159

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 16
Simulation time is 0.01
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.01,0.010625], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 4.455355084e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 8.472640473e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 7.352285515e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 16
Simulation time is 0.010625
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.010625 0.009156115242
0.010625 0.009736794118

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 17
Simulation time is 0.010625
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.010625,0.01125], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.688051646e-12
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 8.976691212e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 8.249954636e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 17
Simulation time is 0.01125
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.01125 0.01288947252
0.01125 0.009598386206

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 18
Simulation time is 0.01125
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.01125,0.011875], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.097640537e-12
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 9.515053433e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 9.201459979e-06
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 18
Simulation time is 0.011875
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.011875 0.01150812733
0.011875 0.009655672749

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 19
Simulation time is 0.011875
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.011875,0.0125], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 6.143434033e-12
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 9.994656052e-07
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 1.020092558e-05
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 19
Simulation time is 0.0125
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.0125 0.00589897187
0.0125 0.00987290302

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 20
Simulation time is 0.0125
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.0125,0.013125], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.196407281e-12
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 1.044509897e-06
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 1.124543548e-05
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 20
Simulation time is 0.013125
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.013125 0.009327060383
0.013125 0.009744750937

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 21
Simulation time is 0.013125
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.013125,0.01375], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 5.795565238e-12
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 1.100712568e-06
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 1.234614805e-05
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 21
Simulation time is 0.01375
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.01375 0.02104994665
0.01375 0.009302987901

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 22
Simulation time is 0.01375
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.01375,0.014375], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 7.008282378e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 1.168937581e-06
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 1.351508563e-05
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 22
Simulation time is 0.014375
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.014375 0.02540088554
0.014375 0.009145701308

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 23
Simulation time is 0.014375
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.014375,0.015], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 3.525612503e-12
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 1.234783411e-06
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 1.474986904e-05
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 23
Simulation time is 0.015
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.015 0.01907431917
0.015 0.009395460325

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 24
Simulation time is 0.015
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.015,0.015625], dt = 0.000625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 9.163695579e-13
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 1.292868721e-06
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): estimated upper bound on IB point displacement since last regrid = 1.604273776e-05
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 24
Simulation time is 0.015625
+++++++++++++++++++++++++++++++++++++++++++++++++++

0.015625 0.01544627646
0.015625 0.009540242791
