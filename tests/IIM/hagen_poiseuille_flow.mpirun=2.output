
IIMethod: mesh part 0 is using FIRST order LAGRANGE finite elements.

IBHierarchyIntegrator::initializePatchHierarchy(): tag_buffer = 0
INSStaggeredHierarchyIntegrator::initializeCompositeHierarchyData():
  projecting the interpolated velocity field
INSStaggeredHierarchyIntegrator::regridProjection(): regrid projection solve residual norm        = 0
Input database:
input_db {
   Re                           = 100                       // input not used
   RHO                          = 1                         // input used
   MU                           = 0.01                      // input used
   U_MAX                        = 1                         // input used
   PI                           = 3.14159                   // input not used
   THETA                        = 0                         // input used
   CYLINDER_MESH_FILENAME       = "/home/amin/mesh_data/CylindricalSurfaceTri_N_64_MFAC_2.e" // input not used
   MAX_LEVELS                   = 1                         // input used
   REF_RATIO                    = 1                         // input used
   N                            = 64                        // input used
   NFINEST                      = 64                        // input used
   L                            = 5                         // input used
   H                            = 5                         // input used
   D                            = 1                         // input used
   P_E                          = 0.4                       // input used
   DX0                          = 0.078125                  // input not used
   DX                           = 0.078125                  // input used
   MFAC                         = 2                         // input used
   ELEM_TYPE                    = "QUAD4"                   // input not used
   elem_order_thin              = "FIRST"                   // input not used
   X_LOC_MIN                    = 0.5                       // input used
   X_LOC_MAX                    = 4.5                       // input used
   Z_LOC_MIN                    = 0                         // input used
   Z_LOC_MAX                    = 5                         // input used
   Y_LOC_MIN                    = 0                         // input used
   Y_LOC_MAX                    = 5                         // input used
   Yo                           = 2.5                       // input used
   Zo                           = 2.5                       // input used
   Yi                           = 2.5                       // input used
   Zi                           = 2.5                       // input used
   FEEDBACK_FORCER              = FALSE                     // input not used
   IB_DELTA_FUNCTION            = "IB_3"                    // input used
   SPLIT_NORMAL_FORCES          = TRUE                      // input used
   SPLIT_TANGENTIAL_FORCES      = TRUE                      // input used
   USE_PRESSURE_JUMP_CONDITIONS = TRUE                      // input used
   USE_VELOCITY_JUMP_CONDITIONS = TRUE                      // input used
   WSS_CALC_WIDTH               = 1.05                      // input used
   P_CALC_WIDTH                 = 1.5                       // input used
   USE_CONSISTENT_MASS_MATRIX   = TRUE                      // input used
   IB_POINT_DENSITY             = 1                         // input used
   SOLVER_TYPE                  = "STAGGERED"               // input not used
   CFL_MAX                      = 0.1                       // input used
   DT                           = 0.00390625                // input used
   START_TIME                   = 0                         // input used
   END_TIME                     = 0.0390625                 // input used
   GROW_DT                      = 2                         // input used
   NUM_CYCLES                   = 1                         // input used
   CONVECTIVE_TS_TYPE           = "ADAMS_BASHFORTH"         // input used
   CONVECTIVE_OP_TYPE           = "STABILIZED_PPM"          // input used
   CONVECTIVE_FORM              = "ADVECTIVE"               // input used
   NORMALIZE_PRESSURE           = FALSE                     // input used
   ERROR_ON_DT_CHANGE           = TRUE                      // input used
   VORTICITY_TAGGING            = TRUE                      // input used
   TAG_BUFFER                   = 1                         // input used
   REGRID_CFL_INTERVAL          = 0.5                       // input used
   OUTPUT_U                     = TRUE                      // input used
   OUTPUT_P                     = TRUE                      // input used
   OUTPUT_F                     = TRUE                      // input used
   OUTPUT_OMEGA                 = TRUE                      // input used
   OUTPUT_DIV_U                 = TRUE                      // input used
   ENABLE_LOGGING               = TRUE                      // input used
   KAPPA_S_THIN                 = 131.072                   // input used
   ETA_S_THIN                   = 0                         // input used
   U                            = "(sqrt((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H)) >= D/2) ? 0.0 : U_MAX*(1.0 - 4.0*((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H))/(D*D))" // input used
   V                            = "0.0"                     // input used
   W                            = "0.0"                     // input used
   FFAC                         = 0.08                      // input not used
   P                            = "(sqrt((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H)) > D/2) ? 0.0 : -2.*p_e*(X0)/(L) + p_e" // input used
   X1_lower                     = 2                         // input used
   X1_upper                     = 3                         // input used
   VelocityInitialConditions {
      p_e        = 0.4                                      // input used
      theta      = 0                                        // input used
      D          = 1                                        // input used
      w          = "0.0"                                    // input not used
      H          = 5                                        // input used
      L          = 5                                        // input used
      X1_lower   = 2                                        // input used
      X1_upper   = 3                                        // input used
      mu         = 0.01                                     // input used
      U_MAX      = 1                                        // input used
      function_0 = "(sqrt((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H)) >= D/2) ? 0.0 : U_MAX*(1.0 - 4.0*((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H))/(D*D))" // input used
      function_1 = "0.0"                                    // input used
      function_2 = "0.0"                                    // input used
   }
   PressureInitialConditions {
      D        = 1                                          // input used
      L        = 5                                          // input used
      H        = 5                                          // input used
      U_MAX    = 1                                          // input used
      mu       = 0.01                                       // input used
      p_e      = 0.4                                        // input used
      theta    = 0                                          // input used
      X1_lower = 2                                          // input used
      X1_upper = 3                                          // input used
      function = "(sqrt((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H)) > D/2) ? 0.0 : -2.*p_e*(X0)/(L) + p_e" // input used
   }
   VelocityBcCoefs_0 {
      p_e              = 0.4                                // input used
      D                = 1                                  // input used
      L                = 5                                  // input used
      X1_lower         = 2                                  // input used
      X1_upper         = 3                                  // input used
      mu               = 0.01                               // input used
      H                = 5                                  // input used
      U_MAX            = 1                                  // input used
      acoef_function_0 = "(sqrt((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H)) < D/2) ?  0.0 : 1.0" // input used
      acoef_function_1 = "(sqrt((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H)) < D/2) ? 0.0 : 1.0" // input used
      acoef_function_2 = "1.0"                              // input used
      acoef_function_3 = "1.0"                              // input used
      acoef_function_4 = "1.0"                              // input used
      acoef_function_5 = "1.0"                              // input used
      bcoef_function_0 = "(sqrt((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H)) < D/2) ? 1.0 : 0.0" // input used
      bcoef_function_1 = "(sqrt((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H)) < D/2) ? 1.0 : 0.0" // input used
      bcoef_function_2 = "0.0"                              // input used
      bcoef_function_3 = "0.0"                              // input used
      bcoef_function_4 = "0.0"                              // input used
      bcoef_function_5 = "0.0"                              // input used
      gcoef_function_0 = "(sqrt((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H)) < D/2) ? -p_e : 0.0" // input used
      gcoef_function_1 = "(sqrt((X1 - 0.5*H)*(X1 - 0.5*H) + (X2 - 0.5*H)*(X2 - 0.5*H)) < D/2) ? p_e : 0.0" // input used
      gcoef_function_2 = "0.0"                              // input used
      gcoef_function_3 = "0.0"                              // input used
      gcoef_function_4 = "0.0"                              // input used
      gcoef_function_5 = "0.0"                              // input used
   }
   VelocityBcCoefs_1 {
      p_e              = 0.4                                // input used
      D                = 1                                  // input used
      L                = 5                                  // input used
      X1_lower         = 2                                  // input used
      X1_upper         = 3                                  // input used
      mu               = 0.01                               // input used
      H                = 5                                  // input used
      acoef_function_0 = "1.0"                              // input used
      acoef_function_1 = "1.0"                              // input used
      acoef_function_2 = "0.0"                              // input used
      acoef_function_3 = "0.0"                              // input used
      acoef_function_4 = "1.0"                              // input used
      acoef_function_5 = "1.0"                              // input used
      bcoef_function_0 = "0.0"                              // input used
      bcoef_function_1 = "0.0"                              // input used
      bcoef_function_2 = "1.0"                              // input used
      bcoef_function_3 = "1.0"                              // input used
      bcoef_function_4 = "0.0"                              // input used
      bcoef_function_5 = "0.0"                              // input used
      gcoef_function_0 = "0.0"                              // input used
      gcoef_function_1 = "0.0"                              // input used
      gcoef_function_2 = "0.0"                              // input used
      gcoef_function_3 = "0.0"                              // input used
      gcoef_function_4 = "0.0"                              // input used
      gcoef_function_5 = "0.0"                              // input used
   }
   VelocityBcCoefs_2 {
      acoef_function_0 = "1.0"                              // input used
      acoef_function_1 = "1.0"                              // input used
      acoef_function_2 = "1.0"                              // input used
      acoef_function_3 = "1.0"                              // input used
      acoef_function_4 = "0.0"                              // input used
      acoef_function_5 = "0.0"                              // input used
      bcoef_function_0 = "0.0"                              // input used
      bcoef_function_1 = "0.0"                              // input used
      bcoef_function_2 = "0.0"                              // input used
      bcoef_function_3 = "0.0"                              // input used
      bcoef_function_4 = "1.0"                              // input used
      bcoef_function_5 = "1.0"                              // input used
      gcoef_function_0 = "0.0"                              // input used
      gcoef_function_1 = "0.0"                              // input used
      gcoef_function_2 = "0.0"                              // input used
      gcoef_function_3 = "0.0"                              // input used
      gcoef_function_4 = "0.0"                              // input used
      gcoef_function_5 = "0.0"                              // input used
   }
   IBHierarchyIntegrator {
      start_time                       = 0                  // input used
      end_time                         = 0.0390625          // input used
      grow_dt                          = 2                  // input used
      num_cycles                       = 1                  // input used
      regrid_cfl_interval              = 0.5                // input used
      dt_max                           = 0.00390625         // input used
      error_on_dt_change               = TRUE               // input used
      enable_logging                   = TRUE               // input used
      enable_logging_solver_iterations = FALSE              // input used
   }
   IIMethod {
      IB_delta_fcn                     = "IB_3"             // input used
      split_normal_force               = TRUE               // input not used
      split_tangential_force           = TRUE               // input not used
      use_pressure_jump_conditions     = TRUE               // input used
      use_velocity_jump_conditions     = TRUE               // input used
      use_consistent_mass_matrix       = TRUE               // input used
      IB_point_density                 = 1                  // input used
      p_calc_width                     = 1.5                // input not used
      wss_calc_width                   = 1.05               // input used
      enable_logging_solver_iterations = FALSE              // input not used
      min_ghost_cell_width             = 6                  // input used
   }
   INSStaggeredHierarchyIntegrator {
      mu                               = 0.01               // input used
      rho                              = 1                  // input used
      start_time                       = 0                  // input used
      end_time                         = 0.0390625          // input used
      grow_dt                          = 2                  // input used
      convective_time_stepping_type    = "ADAMS_BASHFORTH"  // input used
      convective_op_type               = "STABILIZED_PPM"   // input used
      convective_difference_form       = "ADVECTIVE"        // input used
      normalize_pressure               = FALSE              // input used
      cfl                              = 0.1                // input used
      dt_max                           = 0.00390625         // input used
      using_vorticity_tagging          = TRUE               // input used
      vorticity_rel_thresh             = 0.01               // input used
      tag_buffer                       = 1                  // input used
      output_U                         = TRUE               // input used
      output_P                         = TRUE               // input used
      output_F                         = TRUE               // input used
      output_Omega                     = TRUE               // input used
      output_Div_U                     = TRUE               // input used
      enable_logging                   = TRUE               // input used
      enable_logging_solver_iterations = FALSE              // input used
   }
   Main {
      log_file_name               = "output"                // input used
      log_all_nodes               = FALSE                   // input used
      viz_writer                  = "VisIt", "ExodusII"     // input used
      viz_dump_interval           = -1                      // input used
      viz_dump_dirname            = "viz_IIM3d"             // input used
      visit_number_procs_per_file = 1                       // input used
      restart_dump_interval       = 0                       // input used
      restart_dump_dirname        = "restart_IIM_3d"        // input used
      data_dump_interval          = 0                       // input used
      data_dump_dirname           = "post_process_IIM_3d"   // input used
      timer_dump_interval         = 0                       // input used
   }
   CartesianGeometry {
      domain_boxes       = [(0,0,0),(63,63,63)]             // input used
      x_lo               = 0, 0, 0                          // input used
      x_up               = 5, 5, 5                          // input used
      periodic_dimension = 0, 0, 0                          // input used
   }
   GriddingAlgorithm {
      max_levels                = 1                         // input used
      efficiency_tolerance      = 0.8                       // input used
      combine_efficiency        = 0.8                       // input used
      check_nonrefined_tags     = 'w'                       // from default
      check_overlapping_patches = 'i'                       // from default
      extend_tags_to_bdry       = FALSE                     // from default
      ratio_to_coarser {
         level_1 = 1, 1, 1                                  // input not used
         level_2 = 1, 1, 1                                  // input not used
         level_3 = 1, 1, 1                                  // input not used
         level_4 = 1, 1, 1                                  // input not used
         level_5 = 1, 1, 1                                  // input not used
         level_6 = 1, 1, 1                                  // input not used
         level_7 = 1, 1, 1                                  // input not used
      }
      largest_patch_size {
         level_0 = 512, 512, 512                            // input used
      }
      smallest_patch_size {
         level_0 = 8, 8, 8                                  // input used
      }
   }
   StandardTagAndInitialize {
      tagging_method = "GRADIENT_DETECTOR"                  // input used
   }
   LoadBalancer {
      bin_pack_method                      = "SPATIAL"      // input used
      max_workload_factor                  = 1              // input used
      ignore_level_box_union_is_single_box = FALSE          // from default
   }
   TimerManager {
      print_exclusive      = FALSE                          // input used
      print_total          = TRUE                           // input used
      print_threshold      = 0.1                            // input used
      timer_list           = "IBAMR::*::*", "IBTK::*::*", "*::*::*" // input used
      print_processor      = TRUE                           // from default
      print_max            = FALSE                          // from default
      print_summed         = FALSE                          // from default
      print_user           = FALSE                          // from default
      print_sys            = FALSE                          // from default
      print_wall           = TRUE                           // from default
      print_percentage     = TRUE                           // from default
      print_concurrent     = FALSE                          // from default
      print_timer_overhead = FALSE                          // from default
   }
}

+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 0
Simulation time is 0
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0,0.00390625], dt = 0.00390625
IBHierarchyIntegrator::advanceHierarchy(): regridding prior to timestep 0
IBHierarchyIntegrator::regridHierarchy(): starting Lagrangian data movement
IBHierarchyIntegrator::regridHierarchy(): regridding the patch hierarchy
IBHierarchyIntegrator::regridHierarchy(): finishing Lagrangian data movement
INSStaggeredHierarchyIntegrator::preprocessIntegrateHierarchy(): initializing convective operator
INSStaggeredHierarchyIntegrator::preprocessIntegrateHierarchy(): initializing velocity subdomain solver
INSStaggeredHierarchyIntegrator::preprocessIntegrateHierarchy(): initializing pressure subdomain solver
INSStaggeredHierarchyIntegrator::preprocessIntegrateHierarchy(): initializing incompressible Stokes solver
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.73385e-08
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 6.78177e-09
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 0.04948
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): Eulerian estimate of upper bound on IB point displacement since last regrid = 0.04948
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 0
Simulation time is 0.00390625
+++++++++++++++++++++++++++++++++++++++++++++++++++

 Qi = -0.395413 Qo = 0.395404


Writing state data...

 WSS_L2_norm = 0.123188

 WSS_max_norm = 0.0713189

 U_L2_norm = 0.0996442

 U_max_norm = 0.0775212

 disp_L2_norm = 0.000385623

 disp_max_norm = 0.00029879

 P_L2_norm = 0.0806441

 P_max_norm = 0.0767836


+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 1
Simulation time is 0.00390625
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.00390625,0.0078125], dt = 0.00390625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 7.36087e-10
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 0.0495653
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): Eulerian estimate of upper bound on IB point displacement since last regrid = 0.0990453
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 1
Simulation time is 0.0078125
+++++++++++++++++++++++++++++++++++++++++++++++++++

 Qi = -0.398012 Qo = 0.397974


Writing state data...

 WSS_L2_norm = 0.130284

 WSS_max_norm = 0.0756106

 U_L2_norm = 0.0189951

 U_max_norm = 0.0253722

 disp_L2_norm = 0.000366702

 disp_max_norm = 0.000232337

 P_L2_norm = 0.0806351

 P_max_norm = 0.0767641


+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 2
Simulation time is 0.0078125
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.0078125,0.0117188], dt = 0.00390625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.1384e-09
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 0.0496495
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): Eulerian estimate of upper bound on IB point displacement since last regrid = 0.148695
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 2
Simulation time is 0.0117188
+++++++++++++++++++++++++++++++++++++++++++++++++++

 Qi = -0.40057 Qo = 0.400487


Writing state data...

 WSS_L2_norm = 0.12731

 WSS_max_norm = 0.073088

 U_L2_norm = 0.039808

 U_max_norm = 0.0379314

 disp_L2_norm = 0.000514958

 disp_max_norm = 0.000347827

 P_L2_norm = 0.0806168

 P_max_norm = 0.0767646


+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 3
Simulation time is 0.0117188
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.0117188,0.015625], dt = 0.00390625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 2.06708e-09
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 0.0497298
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): Eulerian estimate of upper bound on IB point displacement since last regrid = 0.198425
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 3
Simulation time is 0.015625
+++++++++++++++++++++++++++++++++++++++++++++++++++

 Qi = -0.402834 Qo = 0.402692


Writing state data...

 WSS_L2_norm = 0.130273

 WSS_max_norm = 0.0753161

 U_L2_norm = 0.0149843

 U_max_norm = 0.0217084

 disp_L2_norm = 0.000493942

 disp_max_norm = 0.000313907

 P_L2_norm = 0.0805897

 P_max_norm = 0.0767338


+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 4
Simulation time is 0.015625
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.015625,0.0195312], dt = 0.00390625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 8.01685e-10
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 0.0498089
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): Eulerian estimate of upper bound on IB point displacement since last regrid = 0.248233
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 4
Simulation time is 0.0195312
+++++++++++++++++++++++++++++++++++++++++++++++++++

 Qi = -0.405035 Qo = 0.404819


Writing state data...

 WSS_L2_norm = 0.12872

 WSS_max_norm = 0.0736178

 U_L2_norm = 0.0177726

 U_max_norm = 0.0205354

 disp_L2_norm = 0.000556336

 disp_max_norm = 0.00034593

 P_L2_norm = 0.0805537

 P_max_norm = 0.076704


+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 5
Simulation time is 0.0195312
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.0195312,0.0234375], dt = 0.00390625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 1.57727e-09
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 0.0498854
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): Eulerian estimate of upper bound on IB point displacement since last regrid = 0.298119
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 5
Simulation time is 0.0234375
+++++++++++++++++++++++++++++++++++++++++++++++++++

 Qi = -0.407058 Qo = 0.406756


Writing state data...

 WSS_L2_norm = 0.130103

 WSS_max_norm = 0.0747292

 U_L2_norm = 0.00975448

 U_max_norm = 0.0150119

 disp_L2_norm = 0.000538909

 disp_max_norm = 0.000340433

 P_L2_norm = 0.0805091

 P_max_norm = 0.0766633


+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 6
Simulation time is 0.0234375
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.0234375,0.0273438], dt = 0.00390625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 6.48832e-10
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 0.0499609
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): Eulerian estimate of upper bound on IB point displacement since last regrid = 0.34808
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 6
Simulation time is 0.0273438
+++++++++++++++++++++++++++++++++++++++++++++++++++

 Qi = -0.40902 Qo = 0.408616


Writing state data...

 WSS_L2_norm = 0.129235

 WSS_max_norm = 0.073732

 U_L2_norm = 0.00853245

 U_max_norm = 0.0117982

 disp_L2_norm = 0.00056573

 disp_max_norm = 0.000344313

 P_L2_norm = 0.0804558

 P_max_norm = 0.0766151


+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 7
Simulation time is 0.0273438
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.0273438,0.03125], dt = 0.00390625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 2.7017e-08
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 0.0500345
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): Eulerian estimate of upper bound on IB point displacement since last regrid = 0.398114
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 7
Simulation time is 0.03125
+++++++++++++++++++++++++++++++++++++++++++++++++++

 Qi = -0.410861 Qo = 0.410346


Writing state data...

 WSS_L2_norm = 0.129906

 WSS_max_norm = 0.0742888

 U_L2_norm = 0.00604906

 U_max_norm = 0.00920786

 disp_L2_norm = 0.000553083

 disp_max_norm = 0.000347767

 P_L2_norm = 0.0803942

 P_max_norm = 0.0765597


+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 8
Simulation time is 0.03125
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.03125,0.0351562], dt = 0.00390625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 5.62752e-10
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 0.0501078
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): Eulerian estimate of upper bound on IB point displacement since last regrid = 0.448222
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 8
Simulation time is 0.0351562
+++++++++++++++++++++++++++++++++++++++++++++++++++

 Qi = -0.412644 Qo = 0.412004


Writing state data...

 WSS_L2_norm = 0.12938

 WSS_max_norm = 0.0736878

 U_L2_norm = 0.00436728

 U_max_norm = 0.00690236

 disp_L2_norm = 0.000564344

 disp_max_norm = 0.000347995

 P_L2_norm = 0.0803242

 P_max_norm = 0.0764969


+++++++++++++++++++++++++++++++++++++++++++++++++++
At beginning of timestep # 9
Simulation time is 0.0351562
IBHierarchyIntegrator::advanceHierarchy(): time interval = [0.0351562,0.0390625], dt = 0.00390625
IBHierarchyIntegrator::preprocessIntegrateHierarchy(): performing Lagrangian forward Euler step
IBHierarchyIntegrator::advanceHierarchy(): integrating hierarchy
IBHierarchyIntegrator::integrateHierarchy(): computing Lagrangian force
IBHierarchyIntegrator::integrateHierarchy(): spreading Lagrangian force to the Eulerian grid
IBHierarchyIntegrator::integrateHierarchy(): solving the incompressible Navier-Stokes equations
INSStaggeredHierarchyIntegrator::integrateHierarchy(): stokes solve residual norm        = 2.73837e-08
IBHierarchyIntegrator::integrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::integrateHierarchy(): performing Lagrangian midpoint-rule step
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): interpolating Eulerian velocity to the Lagrangian mesh
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): CFL number = 0.0501802
IBHierarchyIntegrator::postprocessIntegrateHierarchy(): Eulerian estimate of upper bound on IB point displacement since last regrid = 0.498402
IBHierarchyIntegrator::advanceHierarchy(): synchronizing updated data
IBHierarchyIntegrator::advanceHierarchy(): resetting time dependent data

At end       of timestep # 9
Simulation time is 0.0390625
+++++++++++++++++++++++++++++++++++++++++++++++++++

 Qi = -0.414339 Qo = 0.413565


Writing state data...

 WSS_L2_norm = 0.129695

 WSS_max_norm = 0.0739433

 U_L2_norm = 0.00373066

 U_max_norm = 0.00586016

 disp_L2_norm = 0.000554981

 disp_max_norm = 0.000346275

 P_L2_norm = 0.0802459

 P_max_norm = 0.0764271


+++++++++++++++++++++++++++++++++++++++++++++++++++
Computing error norms.

 p_Eulerian_L2_norm = 0.0287726

 p_Eulerian_max_norm = 0.0589616

 u_Eulerian_L2_norm = 0.00512296

 u_Eulerian_max_norm = 0.00581954

Error in u at time 0.0390625:
  L1-norm:  0.196709748736683
  L2-norm:  0.02401376940749569
  max-norm: 0.07432830668161754
+++++++++++++++++++++++++++++++++++++++++++++++++++
Error in p at time 0.037109375:
  L1-norm:  1.892534267434427
  L2-norm:  0.3477879718881943
  max-norm: 0.2447653235952411
+++++++++++++++++++++++++++++++++++++++++++++++++++
 MU = 0.01
  dx:  0.078125
  dt: 0.00390625
 Using the jump condition
